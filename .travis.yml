jobs:
  include:
  
  - language: 
      - node_js
    node_js: node # Latest stable (can also use 14, 13...)
    
    before_install:
       - cd node_js
       - npm install chai
       - npm install mocha

    script:
       - mocha test

  - language: cpp
    compiler: gcc
    sudo: require
    os: linux
      
    before_install:
    - echo -e "machine github.com\n  login $GITHUB_TOKEN" > ~/.netrc
    - git lfs pull

    - sudo apt-get install libgtest-dev
    - cd /usr/src/gtest
    - sudo env "PATH=$PATH" cmake CMakeLists.txt
    - sudo env "PATH=$PATH" make
    - sudo cp *.a /usr/lib
    - cd -
  
    script:
    - cd plain_cmake
    - mkdir build && cd build
    - cmake ..
    - make
    - ./test/test_all

  - language: generic
    sudo: required
    cache: apt

     # Configuration variables. All variables are global now, but this can be used to
     # trigger a build matrix for different ROS distributions if desired.
    env:
      - ROS_DISTRO=kinetic
      - ROS_CI_DESKTOP="`lsb_release -cs`"  # e.g. [trusty|xenial|...]
      - CI_SOURCE_PATH=$(pwd)
      - ROS_PARALLEL_JOBS='-j8 -l6'
      - PYTHONPATH=$PYTHONPATH:/usr/lib/python2.7/dist-packages:/usr/local/lib/python2.7/dist-packages

     # Install system dependencies, namely a very barebones ROS setup.
    before_install:
        - sudo sh -c "echo \"deb http://packages.ros.org/ros/ubuntu $ROS_CI_DESKTOP main\" > /etc/apt/sources.list.d/ros-latest.list"
        - sudo apt-key adv --keyserver 'hkp://keyserver.ubuntu.com:80' --recv-key C1CF6E31E6BADE8868B172B4F42ED6FBAB17C654
        - sudo apt-get update -qq
        - sudo apt-get install dpkg
        - sudo apt-get install -y python-catkin-pkg python-rosdep python-wstool ros-$ROS_DISTRO-ros-base
        - source /opt/ros/$ROS_DISTRO/setup.bash
       # Prepare rosdep to install dependencies.
        - sudo rosdep init
        - rosdep update

    # Create a catkin workspace with the package under integration.
    install:
       - mkdir -p ~/catkin_ws/src
       - cd ~/catkin_ws/src
       - catkin_init_workspace
       # Create the devel/setup.bash (run catkin_make with an empty workspace) and
       # source it to set the path variables.
       - cd ~/catkin_ws
       - catkin_make
       - source devel/setup.bash
       # Add the package under integration to the workspace using a symlink.
       - cd ~/catkin_ws/src
       - ln -s $CI_SOURCE_PATH .

    script:
       - source /opt/ros/$ROS_DISTRO/setup.bash
       - cd ~/catkin_ws
       - catkin_make
